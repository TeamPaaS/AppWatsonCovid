using APPCOVID.DAL.DataManagers.Core;
using APPCOVID.DAL.DataManagers.Helper;
using APPCOVID.Entity.DTO;
using System.Collections.Generic;

namespace APPCOVID.DAL.DataManagers.Managers
{
    public class ConversationManager
    {
        #region Db Queries 
        private readonly string createTableQuery = $@"CREATE TABLE {DalCostants.TABLE_SCHEMA}.{DalCostants.CONVERSATION_TABLE}" +
           "( CONVERSID INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, " +
           "TYPE VARCHAR(50) NOT NULL, " +
           "USERID INT NOT NULL, " +         
           "MESSAGE VARCHAR(20000) NULL, " +
           "CONVERSDATETIME VARCHAR(20) NOT NULL, " +
           "PRIMARY KEY (CONVERSID) );";

        private readonly string getAllDataQuery = $@"select * from {DalCostants.TABLE_SCHEMA}.{DalCostants.CONVERSATION_TABLE}";


        #endregion

        private DataManager<ConversationDto> _dataManager;

        public ConversationManager()
        {
            _dataManager = new DataManager<ConversationDto>();
            if (!_dataManager.IsTableExistsinDb(DalCostants.TABLE_SCHEMA, DalCostants.CONVERSATION_TABLE))
            {
                _dataManager.CreateNewTable(createTableQuery, DalCostants.TABLE_SCHEMA, DalCostants.CONVERSATION_TABLE);
            }
        }

        public List<ConversationDto> GetConversationData()
        {
            return _dataManager.GetData(getAllDataQuery);
        }

        public bool CreateConversation(ConversationDto conversation)
        {
            string prepareQuery = $@"insert into {DalCostants.TABLE_SCHEMA}.{DalCostants.CONVERSATION_TABLE} (TYPE,USERID,MESSAGE,CONVERSDATETIME)
                            values('{conversation.TYPE}', {conversation.USERID}, '{conversation.MESSAGE}', '{conversation.CONVERSDATETIME}')";
            return _dataManager.InsertData(prepareQuery);
        }
    }
}
