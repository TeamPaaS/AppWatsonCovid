using APPCOVID.DAL.DataManagers.Core;
using APPCOVID.DAL.DataManagers.Helper;
using APPCOVID.Entity.DTO;
using System.Collections.Generic;

namespace APPCOVID.DAL.DataManagers.Managers
{
    public class RoleManager : DataManager<RoleDto>
    {
        #region Db Queries 
        private readonly string createTableQuery = $@"CREATE TABLE {DalCostants.TABLE_SCHEMA}.{DalCostants.ROLE_TABLE}" +
           "( ROLEID INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, " +
           "ROLENAME VARCHAR(50) NOT NULL, " +
           "PRIMARY KEY (ROLEID) );";

        private readonly string getAllDataQuery = $@"select * from {DalCostants.TABLE_SCHEMA}.{DalCostants.ROLE_TABLE}";

        #endregion

        private DataManager<RoleDto> _dataManager;

        public RoleManager()
        {
            _dataManager = new DataManager<RoleDto>();
            if (!_dataManager.IsTableExistsinDb(DalCostants.TABLE_SCHEMA, DalCostants.ROLE_TABLE))
            {
                _dataManager.CreateNewTable(createTableQuery, DalCostants.TABLE_SCHEMA, DalCostants.ROLE_TABLE);
            }
        }
        public List<RoleDto> GetRoleData()
        {
            return _dataManager.GetData(getAllDataQuery);
        }

        public bool CreateRole(RoleDto userrole)
        {
            string prepareQuery = $@"insert into {DalCostants.TABLE_SCHEMA}.{DalCostants.ROLE_TABLE}(ROLENAME) values('{userrole.ROLENAME}')";
            return _dataManager.InsertData(prepareQuery);
        }
    }
}
