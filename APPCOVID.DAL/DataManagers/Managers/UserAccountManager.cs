using APPCOVID.DAL.DataManagers.Core;
using APPCOVID.DAL.DataManagers.Helper;
using APPCOVID.Entity.DTO;
using System.Collections.Generic;
using System.Linq;

namespace APP27062020.DAL.DataManagers
{
    public class UserAccountManager : DataManager<UserAccountDto>
    {
        #region Db Queries 
        private readonly string createTableQuery = $@"CREATE TABLE {DalCostants.TABLE_SCHEMA}.{DalCostants.USERACCOUNT_TABLE}" +
           "( USERID INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, " +
           "PASSWORD VARCHAR(50) NOT NULL, " +
           "PASSWORDKEY VARCHAR(500) NOT NULL, " +
           "USERNAME VARCHAR(150) NOT NULL, " +
           "REGISTRATIONDATE VARCHAR(30) NOT NULL, " +
           "LASTLOGINDATE VARCHAR(30) NOT NULL, " +
           "LASTPWDRESETDATE VARCHAR(30) NULL, " +
           "PWDRESETQUESTION VARCHAR(500) NOT NULL, " +
           "PWDRESETANSWER VARCHAR(500) NOT NULL, " +
           "ACTIVATEAC INT NOT NULL, " +
           "PRIMARY KEY (USERID) );";

        private readonly string getAllDataQuery = $@"select * from {DalCostants.TABLE_SCHEMA}.{DalCostants.USERACCOUNT_TABLE}";

        #endregion

        private DataManager<UserAccountDto> _dataManager;

        public UserAccountManager()
        {
            _dataManager = new DataManager<UserAccountDto>();
            if (!_dataManager.IsTableExistsinDb(DalCostants.TABLE_SCHEMA, DalCostants.USERACCOUNT_TABLE))
            {
                _dataManager.CreateNewTable(createTableQuery, DalCostants.TABLE_SCHEMA, DalCostants.USERACCOUNT_TABLE);
            }
        }
        public List<UserAccountDto> GetUserAccountData()
        {
            return _dataManager.GetData(getAllDataQuery);
        }

        public bool CreateUserAccount(UserAccountDto account)
        {
            string prepareQuery = $@"insert into {DalCostants.TABLE_SCHEMA}.{DalCostants.USERACCOUNT_TABLE} 
            (PASSWORD,PASSWORDKEY,USERNAME,REGISTRATIONDATE,LASTLOGINDATE,LASTPWDRESETDATE,PWDRESETQUESTION,PWDRESETANSWER, ACTIVATEAC) 
            values('{account.PASSWORD}', '{account.PASSWORDKEY}', '{account.USERNAME}','{account.REGISTRATIONDATE}','{account.LASTLOGINDATE}', 
            '{account.LASTPWDRESETDATE}', '{account.PWDRESETQUESTION}', '{account.PWDRESETANSWER}', '{account.ACTIVATEAC}')";
            return _dataManager.InsertData(prepareQuery);
        }

        public UserAccountDto GetUserLoginData(string userName, string password)
        {
            string prepareQuery = $@"select * from {DalCostants.TABLE_SCHEMA}.{DalCostants.USERACCOUNT_TABLE} where USERNAME='{userName}' and PASSWORD='{password}'";
            return _dataManager.GetData(prepareQuery).FirstOrDefault();
        }
       
        //public List<UserAccountDto> RetrievePwdbyUserName(string userName)
        //{
        //    string prepareQuery = $@"select PASSWORD from {DalCostants.TABLE_SCHEMA}.{DalCostants.USERACCOUNT_TABLE} where PASSWORD='{userName}'";
        //    return _dataManager.GetData(prepareQuery);
        //}

        //public List<UserAccountDto> GetUserDetailsByUserName(string userName)
        //{
        //    string prepareQuery = $@"select * from {DalCostants.TABLE_SCHEMA}.{DalCostants.USERACCOUNT_TABLE} where PASSWORD='{userName}'";
        //    return _dataManager.GetData(prepareQuery);
        //}
        //public bool SendMail()
        //{

        //}
    }
}
